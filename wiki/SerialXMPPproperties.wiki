#The main configuration file

= Introduction =

The program looks for the file in the Java app's run directory.  You can edit the SerialXMPP.properties file that is packaged with the app.

Alternatively you can specify an alternative location on the command line using the  -c option

{{{
java -cp dfsdfdf -jar SerialXMPP.jar -c /Users/johnDoe/SomeConfigFileName.properties
}}}


= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages


{{{
fromXMPPaddr=gustavvr@gmail.com
fromXMPPpassword=vatsugvatsug
#
toXMPPaddr=rabbitnyc@gmail.com
#
#look for XMPP address  ~[rabbit@example.com] at the begin of the serial stream and send message to this address instead for the default listed in the "toUserid=
#e.g. Arduino
#Serial.println("~[rabbit@example.com]Hi rabbit");  // Sends teh message "Hi rabbit" to rabbit@example.com
#NOT IMPLMENTED
useXmppAddrFromMsg=false
#
serialPort=/dev/tty.usbserial-FTAJLZGV
#serialPort=/dev/tty.usbserial-A70060mR
baud=9600
#
#
XMPPhost=talk.google.com
XMPPport=5222
XMPPserviceName=gmail.com
#
#
#  Status -- free-form text describing a user's presence (i.e., gone to lunch).
Presence.Status=
#  Mode -- one of five presence modes: available (the default), chat, away, xa (extended away), and dnd (do not disturb). 
Presence.Mode=xa
#  Priority -- non-negative numerical priority of a sender's resource. The highest resource priority is the default recipient of packets not addressed to a particular resource.
Presence.Priority=1
#   available -- (Default) indicates the user is available to receive messages.
#   unavailable -- the user is unavailable to receive messages.
Presence.Type=available
}}}